# PR Title:
Feature: Add single heading detection and extraction (Task-002)

# PR Description:

# Single Heading Detection & Extraction

This PR implements support for the `![[filename#heading]]` notation, which extracts a specific section from a referenced file based on its heading.

## Changes
- Updated SectionExtractor to support heading levels 1-7
- Added support for custom IDs in headings
- Improved heading detection regex
- Added comprehensive test cases
- Updated documentation

## Testing
- Added unit tests for all functionality
- Tested with various edge cases (duplicate headings, custom IDs, etc.)
- Verified that all existing tests still pass

Link to Devin run: https://app.devin.ai/sessions/b0cc5f405f674e2b82b66fcfa62a8b68
User: Gong (kaneko.teruaki@gmail.com)


# PR Diff:
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 9bdfe2d..4d19c2e 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,22 +2,34 @@
 
 All notable changes to the "inlined-copy" extension will be documented in this file.
 
+## [0.2.0] - 2025-03-21
+
+### Added
+
+- Support for `![[filename#heading]]` syntax to extract specific sections from referenced files
+- Enhanced heading detection to support heading levels 1-7
+- Added support for headings with custom IDs (e.g., `## Heading {#custom-id}`)
+- Extracts content from the heading to the next heading of equal or higher level
 
 ## [0.1.2] - 2025-03-21
 
 ### Fixed
+
 - Improved file not found error handling to display as Info level messages instead of Error level
 - Made error messages more concise with format "![[filename]] was not found"
 - Implemented extension-less file matching to find files regardless of their extension
 - Fixed issue where copy operation would not execute when a referenced file is not found
+
 ## [0.1.1] - 2025-03-20
 
 ### Fixed
- - Delete useless files from vsix.
+
+- Delete useless files from vsix.
 
 ## [0.1.0] - 2025-03-20
 
 ### Added
+
 - Initial release of inlined-copy extension
 - Support for ![[filename]] notation to expand and copy file content
 - Intelligent file path resolution:
@@ -29,4 +41,3 @@ All notable changes to the "inlined-copy" extension will be documented in this f
 - Suggestions for similar files when a file is not found
 - Error handling for large files, duplicate references, and circular references
 - Configuration options for maximum file size and recursion depth
-
diff --git a/README.md b/README.md
index 645b592..876d047 100644
--- a/README.md
+++ b/README.md
@@ -74,6 +74,9 @@ You can also use the keyboard shortcut: `Ctrl + Shift + C` (Mac: `Cmd + Shift +
   - Supports various path formats: relative, absolute, project root, proximity-based paths
   - Displays selection UI when multiple file candidates exist
 - `![[filename#heading]]` - Expands to the section under the specified heading in the referenced file
+  - Extracts content from the heading to the next heading of equal or higher level
+  - Supports heading levels 1-7 and headings with custom IDs (e.g., `## Heading {#custom-id}`)
+  - Returns the original reference if the heading is not found
 - `{{parameter}}` - Prompts for a value to replace the parameter
 - `{{parameter=defaultValue}}` - Prompts for a value with a default
 
@@ -93,10 +96,12 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: File Not Found Errors
 
 **Symptoms:**
+
 - Error message: "File not found"
 - Referenced file is not expanded in the output
 
 **Solutions:**
+
 1. Check that the file path is correct and the file exists
 2. Try using different path formats (relative, absolute, or from project root)
 3. Ensure the file is within your workspace or a parent directory
@@ -105,10 +110,12 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: Circular References
 
 **Symptoms:**
+
 - Error message: "Circular reference detected"
 - Expansion process stops unexpectedly
 
 **Solutions:**
+
 1. Check your files for circular dependencies (A references B, B references A)
 2. Break the circular chain by removing one of the references
 3. Consider restructuring your documents to avoid circular dependencies
@@ -116,10 +123,12 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: Large File Warnings
 
 **Symptoms:**
+
 - Error message: "File size exceeds maximum allowed limit"
 - File content is not expanded
 
 **Solutions:**
+
 1. Increase the `maxFileSize` setting in VS Code preferences
 2. Split large files into smaller, more manageable files
 3. Consider using section references instead of entire file references
@@ -127,10 +136,12 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: Recursion Depth Exceeded
 
 **Symptoms:**
+
 - Error message: "Maximum recursion depth exceeded"
 - Nested references are not fully expanded
 
 **Solutions:**
+
 1. Increase the `maxRecursionDepth` setting (up to the maximum of 3)
 2. Restructure your documents to reduce nesting depth
 3. Consider using multiple expansion steps for deeply nested structures
@@ -138,11 +149,13 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: Parameter Substitution Problems
 
 **Symptoms:**
+
 - Parameters in referenced files are not being processed
 - Parameter values are not being applied consistently across nested files
 - Default values are not being used correctly
 
 **Solutions:**
+
 1. Check the `maxParameterRecursionDepth` setting (default: 1)
 2. Increase the value if you want parameters in referenced files to be processed
 3. Ensure parameter names match exactly (case-sensitive)
@@ -152,11 +165,13 @@ This section provides solutions for common issues you might encounter when using
 #### Issue: Extension Not Working After Update
 
 **Symptoms:**
+
 - Command not found in command palette
 - Extension doesn't respond when triggered
 - Error messages appear when trying to use the extension
 
 **Solutions:**
+
 1. Reload VS Code window (Ctrl+R or Cmd+R on Mac)
 2. Check for error messages in the Output panel (View > Output > inlined Copy)
 3. Verify the extension is properly installed and enabled in the Extensions panel
@@ -168,21 +183,25 @@ This section provides solutions for common issues you might encounter when using
 The extension provides the following configuration options:
 
 - **inlined-copy.maxFileSize**: Maximum file size in bytes (default: 5MB)
+
   - Prevents processing files larger than this size to avoid performance issues
   - Example: Set to 10485760 for a 10MB limit
 
 - **inlined-copy.maxRecursionDepth**: Maximum depth for recursive file expansion (default: 1, max: 3)
+
   - Controls how many levels of nested file references will be expanded
   - Higher values allow more complex document structures but may impact performance
   - Example: Set to 2 to expand references within referenced files (but not further)
 
 - **inlined-copy.maxParameterRecursionDepth**: Maximum depth for parameter expansion (default: 1, max: 3)
+
   - Controls how deeply nested parameters are expanded inside referenced files
   - Value 1: Parameters in the main document are processed, but not in referenced files
   - Value 2: Parameters in the main document and one level of referenced files are processed
   - Value 3: Parameters in the main document and two levels of referenced files are processed
 
 - **inlined-copy.logLevel**: Log level for the extension (default: "info")
+
   - Controls the verbosity of logs in the output channel and console
   - Available levels: "none", "error", "warn", "info", "debug"
   - Higher levels include all lower level logs (e.g., "info" includes "error" and "warn")
@@ -204,4 +223,4 @@ MIT License - See the [LICENSE](LICENSE) file for details.
 
 See the [CHANGELOG.md](CHANGELOG.md) file for details on version history and updates.
 
-Copyright (c) 2025 frecre
\ No newline at end of file
+Copyright (c) 2025 frecre
diff --git a/src/sectionExtractor.ts b/src/sectionExtractor.ts
index e920823..8abf4b8 100644
--- a/src/sectionExtractor.ts
+++ b/src/sectionExtractor.ts
@@ -18,8 +18,8 @@ export class SectionExtractor {
     // Normalize the heading (remove leading # if present)
     const normalizedHeading = heading.replace(/^#+\s*/, '').trim();
 
-    // Find all headings in the content
-    const headingRegex = /^(#{1,6})\s+(.+)$/gm;
+    // Find all headings in the content (supporting h1-h7 and custom IDs)
+    const headingRegex = /^(#{1,7})\s+(.+?)(?:\s+\{#[\w-]+\})?$/gm;
     const headings: { level: number; title: string; index: number }[] = [];
 
     let match;
diff --git a/src/test/vitest/sectionExtractor.test.ts b/src/test/vitest/sectionExtractor.test.ts
new file mode 100644
index 0000000..724ac14
--- /dev/null
+++ b/src/test/vitest/sectionExtractor.test.ts
@@ -0,0 +1,166 @@
+import { describe, it, expect } from 'vitest';
+import { SectionExtractor } from '../../sectionExtractor';
+
+describe('SectionExtractor', () => {
+  it('should extract section from heading to next similar level heading', () => {
+    const content = `# Main Title
+Some intro text
+
+## First Section
+Content in first section
+
+### Subsection
+Subsection content
+
+## Second Section
+Content in second section`;
+
+    const extracted = SectionExtractor.extractSection(content, 'First Section');
+    const expected = `## First Section
+Content in first section
+
+### Subsection
+Subsection content`;
+
+    expect(extracted).toBe(expected);
+  });
+
+  it('should extract to the end of file if no next similar level heading', () => {
+    const content = `# Main Title
+Some intro text
+
+## Last Section
+Content in last section
+
+### Subsection
+Final content`;
+
+    const extracted = SectionExtractor.extractSection(content, 'Last Section');
+    const expected = `## Last Section
+Content in last section
+
+### Subsection
+Final content`;
+
+    expect(extracted).toBe(expected);
+  });
+
+  it('should return null for non-existent heading', () => {
+    const content = '# Existing Heading\nSome content';
+    const extracted = SectionExtractor.extractSection(content, 'Non-existent Heading');
+    expect(extracted).toBeNull();
+  });
+
+  it('should handle section with multiple subheadings', () => {
+    const content = `## Target Section
+Main content
+
+### First Subsection
+Subsection content
+
+### Second Subsection
+More content
+
+## Next Section`;
+
+    const extracted = SectionExtractor.extractSection(content, 'Target Section');
+    const expected = `## Target Section
+Main content
+
+### First Subsection
+Subsection content
+
+### Second Subsection
+More content`;
+
+    expect(extracted).toBe(expected);
+  });
+
+  it('should handle headings with custom IDs', () => {
+    const content = `# Main Title {#main}
+
+## Section with ID {#section-1}
+Content with ID
+
+## Section without ID
+Regular content`;
+
+    const extracted = SectionExtractor.extractSection(content, 'Section with ID');
+    const expected = `## Section with ID {#section-1}
+Content with ID`;
+
+    expect(extracted).toBe(expected);
+  });
+
+  it('should support heading levels 1-7', () => {
+    const content = `# H1
+## H2
+### H3
+#### H4
+##### H5
+###### H6
+####### H7
+
+Some content`;
+
+    const extracted = SectionExtractor.extractSection(content, 'H7');
+    expect(extracted).toContain('####### H7');
+    expect(extracted).toContain('Some content');
+  });
+
+  it('should use the first occurrence of duplicate headings', () => {
+    const content = `# Main Title
+
+## Duplicate Heading
+Content A
+
+### Subsection
+Sub content
+
+## Duplicate Heading
+Content B
+
+# Another Title`;
+
+    const extracted = SectionExtractor.extractSection(content, 'Duplicate Heading');
+    expect(extracted).toContain('Content A');
+    expect(extracted).not.toContain('Content B');
+  });
+
+  it('should handle complex test cases with sample files', () => {
+    // Instead of reading files, use inline content for testing
+    const basicContent = `# Document Title
+
+Introduction text goes here.
+
+## First Section
+
+Content for the first section.
+
+### Subsection 1.1
+
+Nested content here.
+
+## Second Section
+
+Content for the second section.`;
+
+    const firstSection = SectionExtractor.extractSection(basicContent, 'First Section');
+    expect(firstSection).toContain('Content for the first section');
+    expect(firstSection).toContain('Subsection 1.1');
+    expect(firstSection).not.toContain('Second Section');
+
+    // Test with custom IDs
+    const customIdsContent = `# Main Title {#main}
+
+## Section with ID {#section-1}
+Content with ID
+
+## Section without ID
+Regular content`;
+
+    const sectionWithId = SectionExtractor.extractSection(customIdsContent, 'Section with ID');
+    expect(sectionWithId).toContain('Content with ID');
+    expect(sectionWithId).not.toContain('Regular content');
+  });
+});
diff --git a/test/heading-extraction/basic.md b/test/heading-extraction/basic.md
new file mode 100644
index 0000000..6c43e1c
--- /dev/null
+++ b/test/heading-extraction/basic.md
@@ -0,0 +1,27 @@
+# Document Title
+
+Introduction text goes here.
+
+## First Section
+
+Content for the first section.
+
+### Subsection 1.1
+
+Nested content here.
+
+## Second Section
+
+Content for the second section.
+
+### Subsection 2.1
+
+More nested content.
+
+#### Deep nested heading
+
+Very deeply nested content.
+
+## Third Section
+
+Final section content.
diff --git a/test/heading-extraction/custom_ids.md b/test/heading-extraction/custom_ids.md
new file mode 100644
index 0000000..a3ce945
--- /dev/null
+++ b/test/heading-extraction/custom_ids.md
@@ -0,0 +1,9 @@
+# Main Title {#main}
+
+## Section with ID {#section-1}
+
+Content with ID
+
+## Section without ID
+
+Regular content
diff --git a/test/heading-extraction/duplicate_headings.md b/test/heading-extraction/duplicate_headings.md
new file mode 100644
index 0000000..e128936
--- /dev/null
+++ b/test/heading-extraction/duplicate_headings.md
@@ -0,0 +1,15 @@
+# Main Title
+
+## Duplicate Heading
+
+Content A
+
+### Subsection
+
+Sub content
+
+## Duplicate Heading
+
+Content B
+
+# Another Title
diff --git a/test/heading-extraction/level7_headings.md b/test/heading-extraction/level7_headings.md
new file mode 100644
index 0000000..2160fdb
--- /dev/null
+++ b/test/heading-extraction/level7_headings.md
@@ -0,0 +1,15 @@
+# H1
+
+## H2
+
+### H3
+
+#### H4
+
+##### H5
+
+###### H6
+
+####### H7
+
+Some content
